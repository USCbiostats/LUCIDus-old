% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/est_cluster.R
\name{est_cluster}
\alias{est_cluster}
\title{Estimating latent clusters with multi-omics data}
\usage{
est_cluster(G = NULL, CoG = NULL, Z = NULL, Y, useY = TRUE,
  family = "binary", K = 2, Pred = FALSE, initial = def_initial(),
  itr_tol = def_tol(), tunepar = def_tune())
}
\arguments{
\item{G}{Genetic effects, a matrix}

\item{CoG}{Covariates needed to be included in the G->X path}

\item{Z}{Biomarker data, a matrix}

\item{Y}{Disease outcome, a vector}

\item{useY}{Using Y or not, default is TRUE}

\item{family}{"binary" or "normal" for Y}

\item{K}{Pre-specified # of latent clusters, default is 2}

\item{Pred}{Flag to compute posterior probability of latent cluster with fitted model, default is FALSE}

\item{initial}{A list of initial model parameters will be returned for integrative clustering}

\item{itr_tol}{A list of tolerance settings will be returned for integrative clustering}

\item{tunepar}{A list of tuning parameters and settings will be returned for integrative clustering}
}
\value{
\code{est_cluster} returns an object of list containing parameters estimates, predicted probability of latent clusters, and other features:
\item{beta}{Estimates of genetic effects, matrix}
\item{mu}{Estimates of cluster-specific biomarker means, matrix}
\item{sigma}{Estimates of cluster-specific biomarker covariance matrix, list}
\item{gamma}{Estimates of cluster-specific disease risk, vector}
\item{pcluster}{Probability of cluster, when G is null}
\item{pred}{Predicted probability of belonging to each latent cluster}
}
\description{
\code{est_cluster} estimates an integrated cluster assignment of genetic effects using complete biomarker data with/without disease outcomes. Options to produce sparse solutions for cluster-specific parameter estimates under a circumstance of analyzing high-dimensional data are also provided. An \code{IntClust} object will be produced.
}
\examples{
# For a testing dataset with 10 genetic features (5 causal) and 4 biomarkers (2 causal)
ncluster <- 2
IntClusFit <- est_cluster(G=G1,Z=Z1,Y=Y1,K=ncluster,family="binary",Pred=TRUE,
                          initial=def_initial(), itr_tol=def_tol(),
                          tunepar = def_tune(Select_G=TRUE,Select_Z=TRUE,Rho_G=0.02,Rho_Z_InvCov=0.1,Rho_Z_CovMu=93))

# Identify selected features
G_diff <- apply(apply(IntClusFit$beta,2,range),2,function(x){x[2]-x[1]})[-1]
select_G <- G_diff != 0
InvSigmaMu <- solve(IntClusFit$sigma[[1]])\%*\%IntClusFit$mu[1,]
for(i in 2:ncluster){
    InvSigmaMu <- cbind(InvSigmaMu, solve(IntClusFit$sigma[[i]])\%*\%IntClusFit$mu[i,])
}
Z_diff <- apply(apply(InvSigmaMu,1,range),2,function(x){x[2]-x[1]})
select_Z <- Z_diff != 0
sum(select_G); sum(select_Z)
colnames(G1)[select_G]; colnames(Z1)[select_Z]

# Select the features
if(!all(select_G==FALSE)){
    G_select <- G1[,select_G]
}
if(!all(select_Z==FALSE)){
    Z_select <- Z1[,select_Z]
}

# Re-fit with selected features
set.seed(10)
IntClusFitFinal <- est_cluster(G=G_select,Z=Z_select,Y=Y1,K=ncluster,family="binary",Pred=TRUE,
                               initial=def_initial(), itr_tol=def_tol(), tunepar = def_tune())

# Visualize the results using Sankey diagram
plot_cluster(IntClusFitFinal)

# Re-run the model with covariates in the G->X path
IntClusCoFit <- est_cluster(G=G1,CoG=CoG,Z=Z1,Y=Y1,K=ncluster,family="binary",Pred=TRUE,
                            initial=def_initial(), itr_tol=def_tol(),
                            tunepar = def_tune(Select_G=TRUE,Select_Z=TRUE,Rho_G=0.02,Rho_Z_InvCov=0.1,Rho_Z_CovMu=93))

# Re-fit with selected features with covariates
IntClusCoFitFinal <- est_cluster(G=G_select,CoG=CoG,Z=Z_select,Y=Y1,K=ncluster,family="binary",Pred=TRUE,
                                 initial=def_initial(), itr_tol=def_tol(), tunepar = def_tune())

# Visualize the results
plot_cluster(IntClusCoFitFinal)
}
\references{
Peng, C., Yang, Z., Conti, D.V.
}
\author{
Cheng Peng, Zhao Yang, David V. Conti
}
\keyword{cluster}
\keyword{latent}
